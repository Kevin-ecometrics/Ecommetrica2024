---
const skills = [
  {
    name: "Consultoría Estratégica",
    description:
      "Nuestra receta para el éxito garantiza una planificación segura sobre proyecciones y resultados.",
    percentage: 0,
  },
  {
    name: "Optimización de Google y Meta",
    description:
      "GOOGLE posee más del 93% de la intención de búsqueda y Instagram es donde todos están.",
    percentage: 0,
  },
  {
    name: "Automatización de Marketing y Ventas",
    description:
      "Mejora la adquisición de leads y conversiones con técnicas de growth hacking de primer nivel.",
    percentage: 0,
  },
  {
    name: "Análisis Corporativo",
    description:
      "Obtén conocimiento preciso y tiempo para captar leads entrantes y vender sin parar.",
    percentage: 0,
  },
];
---

<section
  class="md:h-screen py-8 flex justify-center items-center bg-white px-8"
  id="skills"
>
  <div class="grid grid-cols-1 md:grid-cols-2 px-8 gap-8">
    <div>
      <h1 class="text-[#3C3C3C] text-2xl font-bold mb-2">
        ¿Cómo hacerlo bien en línea?
      </h1>
      <h2 class="md:w-[80%] text-2xl md:text-6xl text-[#515151] mb-8 font-bold">
        ¡Una receta para todo lo que has imaginado!
      </h2>
      <p class="md:w-[70%] mb-8">
        En más de 10 años de experiencia en eCommerce hemos acompañado a marcas
        y empresas a lo largo de su transformación digital creando sitios web y
        aplicaciones web visualmente sofisticados, tecnológicamente innovadores
        y multifuncionales.
      </p>
      <p class="md:w-[70%]">
        Caminarás en tu propio ecosistema digital poniendo tu negocio al lado de
        las Visas y Mastercards de tus Clientes y Consumidores.
      </p>
    </div>
    <div class="md:p-4">
      {
        skills.map((skill, index) => (
          <div class="mb-6 skill-container" data-index={index}>
            <div class="flex justify-between items-center">
              <h2 class="hover:cursor-pointer text-2xl font-bold mb-2 text-[#3C3C3C] skill-title">
                {skill.name}
              </h2>
              <span class="text-gray-700 skill-percentage">
                {skill.percentage}%
              </span>
            </div>
            <div class="mb-4 skill-description hover:cursor-pointer">
              {skill.description}
            </div>
            <div class="w-full bg-gray-200 rounded-full h-4">
              <div
                class="bg-[#515151] h-4 rounded-full skill-bar"
                style="width: 0%;"
                data-percentage={skill.percentage}
              />
            </div>
          </div>
        ))
      }
    </div>
  </div>
</section>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const skillContainers = document.querySelectorAll(".skill-container");

    skillContainers.forEach((container) => {
      const title = container.querySelector(".skill-title");
      const description = container.querySelector(".skill-description");
      const skillBars = container.querySelectorAll(".skill-bar");
      const percentageText = container.querySelector(".skill-percentage");

      const animateBars = (start, end, increment) => {
        let currentPercentage = start;
        const update = () => {
          if (
            (increment && currentPercentage <= end) ||
            (!increment && currentPercentage >= end)
          ) {
            skillBars.forEach((bar) => {
              (bar as HTMLElement).style.width = currentPercentage + "%";
            });
            percentageText.textContent = currentPercentage + "%";
            currentPercentage += increment ? 1 : -1;
            requestAnimationFrame(update);
          }
        };
        update();
      };

      title.addEventListener("mouseover", () => animateBars(0, 100, true));
      description.addEventListener("mouseover", () =>
        animateBars(0, 100, true)
      );
      title.addEventListener("mouseout", () => animateBars(100, 0, false));
      description.addEventListener("mouseout", () =>
        animateBars(100, 0, false)
      );
    });
  });
</script>

<style>
  .skill-bar {
    transition: width 1s linear;
  }
</style>
