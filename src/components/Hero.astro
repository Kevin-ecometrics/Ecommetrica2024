---
import { Image } from "astro:assets";
import Insta from "@components/icons/logo-instagram.astro";
import Twit from "@components/icons/logo-twitter.astro";
import Mail from "@components/icons/Mail.astro";
import Tags from "@components/Tags";
import HeroImage from "@public/JuanHero2.webp";
import { getLangFromUrl, useTranslations } from "src/i18n/utils";
import { LuMouse } from "react-icons/lu";
import { FaXTwitter } from "react-icons/fa6";

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
const words = t("hero.words");
---

<section id="home" class="relative bg-cover bg-center bg-[#33244C]">
  <div class="flex justify-between items-center px-16 h-screen">
    <div class="flex flex-col text-white">
      <h1 class="font-bold text-2xl mb-8">{t("hero.title")}</h1>
      <img src="/logocompleto.webp" alt="logo" title="logo" class="mb-4" />
      <span class="text-5xl font-bold mb-8">
        <Tags client:visible tags={words} />
      </span>
      <div class="flex gap-4 mb-8 font-bold">
        <a
          href="#package"
          class="px-8 py-2 hover:bg-white hover:text-black bg-[#861453] text-white
            transition rounded-lg duration-300 ease-in-out"
          >{t("hero.button1")}</a
        >
        <a
          href="#portfolio"
          class="px-8 py-2 text-white hover:bg-white hover:text-black
        transition rounded-lg duration-300 ease-in-out"
          >{t("hero.button2")}</a
        >
      </div>
      <div class="flex md:flex-col gap-4 mb-8">
        <a href="https://www.instagram.com/ecommetrica/" target="_blank">
          <Insta class="w-8 h-8" />
        </a>
        <a href="https://twitter.com/SrGenial" target="_blank">
          <FaXTwitter className="w-8 h-8" />
        </a>
        <a href="mailto:juanmanuel@ecommetrics.com">
          <Mail class="w-10 h-10" />
        </a>
        <a href="#about">
          <LuMouse className="w-8 h-8" />
        </a>
      </div>
    </div>

    <!-- Imagen Hero con efecto parallax -->
    <div
      class="hidden lg:flex items-center justify-center absolute bottom-0 right-20 z-20 parallax-active"
      data-speed="0.5"
    >
      <Image
        src={HeroImage}
        alt="Hero"
        class="flex justify-center items-center image-hover"
      />
    </div>
  </div>

  <!-- Elementos flotantes con parallax -->
  <div class="hidden lg:block">
    <div
      class="border-l-8 border-t-8 border-b-8 border-r-8 absolute top-[25%] border-[#D9D9D9] z-10 right-48 w-[300px] h-[500px] parallax-active"
      data-speed="0.2"
    >
    </div>

    <div
      class="absolute bottom-[15%] right-0 h-[600px] w-96 bg-[#C2155C] z-10 parallax-active"
      data-speed="0.2"
    >
    </div>

    <div
      class="absolute bottom-[5%] right-[420px] h-40 w-40 bg-[#C2155C] z-20 parallax-active"
      data-speed="0.3"
    >
    </div>

    <div
      class="absolute top-[40%] right-[30%] h-28 w-20 bg-[#C2155C] z-20 parallax-active"
      data-speed="0.2"
    >
    </div>

    <div
      class="absolute top-[50%] right-[10%] z-10 parallax-active"
      data-speed="0.2"
    >
      <img src="/contorno.png" alt="Contorno Logo" />
    </div>
  </div>

  <style>
    .parallax-active {
      transition: transform 0.2s ease-out;
    }
  </style>
</section>

<!-- Script de Parallax -->
<script>
  document.addEventListener("mousemove", (e) => {
    const elements = document.querySelectorAll(".parallax-active");
    const { clientX: x, clientY: y } = e;

    elements.forEach((el) => {
      const speed = parseFloat(el.getAttribute("data-speed")) / 10; // Reduce el efecto
      const offsetX = (x - window.innerWidth / 2) * speed;
      const offsetY = (y - window.innerHeight / 2) * speed;

      el.style.transform = `translate(${offsetX}px, ${offsetY}px)`;
    });
  });
</script>
