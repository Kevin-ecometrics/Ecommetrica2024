---
import { Image } from "astro:assets";
import Insta from "@components/icons/logo-instagram.astro";
import Twit from "@components/icons/logo-twitter.astro";
import Mail from "@components/icons/Mail.astro";
import Tags from "@components/Tags";
import HeroImage from "@public/JuanHero2.webp";
import { getLangFromUrl, useTranslations } from "src/i18n/utils";
const words = ["Innova", "Eleva", "Simplifica"];

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
---

<section id="home" class="relative bg-cover bg-center bg-[#33244C]">
  <div class="flex justify-between items-center px-16 h-screen">
    <div class="flex flex-col text-white">
      <h1 class="font-bold text-2xl mb-8">{t("hero.title")}</h1>
      <img src="/logocompleto.webp" alt="logo" title="logo" class="mb-4" />
      <span class="text-5xl font-bold mb-8">
        <Tags client:visible tags={words} />
      </span>
      <div class="flex gap-4 mb-8 font-bold">
        <a
          href="#package"
          class="px-8 py-2 hover:bg-white hover:text-black bg-[#861453] text-white
            transition rounded-lg duration-300 ease-in-out"
          >Comienza</a
        >
        <a
          href="#skills"
          class="px-8 py-2 text-white hover:bg-white hover:text-black
        transition rounded-lg duration-300 ease-in-out"
          >Nosotros</a
        >
      </div>
      <div class="flex md:flex-col gap-4 mb-8">
        <a
          href="https://www.instagram.com/ecommetrica/"
          target="_blank"
          class="cursor-pointer"
        >
          <Insta class="w-8 h-8" />
        </a>
        <!-- <Face class="w-8 h-8" /> -->
        <a
          href="https://twitter.com/SrGenial"
          target="_blank"
          class="cursor-pointer"
        >
          <Twit class="w-8 h-8" />
        </a>
        <a href="mailto:juanmanuel@ecommetrics.com">
          <Mail class="w-10 h-10" />
        </a>
      </div>
    </div>
    <div
      class="hidden
              lg:flex
              items-center
              justify-center
              absolute
              bottom-0
              right-20"
    >
      <Image
        src={HeroImage}
        alt="Hero"
        class="flex justify-center items-center z-10 image-hover"
      />
    </div>
  </div>
  <div class="hidden lg:block">
    <div
      class="border-l-8 border-t-8 border-b-8 absolute top-[25%] border-[#D9D9D9] right-48 w-[300px] h-[500px]"
      style="animation: moveLeftRight 3s infinite;"
    >
    </div>
    <div
      class="absolute bottom-[15%] right-0 h-[600px] w-96 bg-[#C2155C]"
      style="animation: moveLeftRight 5s infinite;"
    >
    </div>
    <div
      class="absolute bottom-[5%] right-[420px] h-40 w-40 bg-[#C2155C]"
      style="animation: moveUpDown 3s infinite;"
    >
    </div>
    <div
      class="absolute top-[40%] right-[30%] h-28 w-20 bg-[#C2155C]"
      style="animation: moveDownUp 3s infinite;"
    >
    </div>
  </div>

  <style>
    @keyframes moveUpDown {
      0%,
      100% {
        transform: translateY(0);
      }
      50% {
        transform: translateY(-60px);
      }
    }

    @keyframes moveLeftRight {
      0%,
      100% {
        transform: translateX(0);
      }
      50% {
        transform: translateX(20px);
      }
    }

    @keyframes moveDownUp {
      0%,
      100% {
        transform: translateY(0);
      }
      50% {
        transform: translateY(20px);
      }
    }

    .image-hover {
      transition: transform 0.1s ease-in-out;
    }
  </style>
</section>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const section = document.querySelector("#home");
    const image = document.querySelector(".image-hover");

    if (section && image) {
      section.addEventListener("mousemove", (e) => {
        const rect = section.getBoundingClientRect();
        const x = (e as MouseEvent).clientX - rect.left;
        const y = (e as MouseEvent).clientY - rect.top;
        const centerX = rect.width / 2;
        const centerY = rect.height / 2;
        const rotateX = (y - centerY) / 40;
        const rotateY = (x - centerX) / 40;
        (image as HTMLElement).style.transform =
          `rotateX(${rotateX}deg) rotateY(${rotateY}deg)`;
      });

      section.addEventListener("mouseleave", () => {
        (image as HTMLElement).style.transform = "rotateX(0) rotateY(0)";
      });
    }
  });
</script>
